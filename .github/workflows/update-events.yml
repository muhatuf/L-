name: Update Le Havre Events

on:
  schedule:
    - cron: '0 6 * * 0'
  workflow_dispatch:
  push:
    branches: [ master ]
    paths: 
      - 'scraper.py'
      - '.github/workflows/update-events.yml'

jobs:
  update-events:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip xvfb jq
        
        # Install Chrome
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
        # Install ChromeDriver
        CHROME_VERSION=$(google-chrome --version | cut -d " " -f3)
        CHROME_MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d. -f1)
        
        if [ "$CHROME_MAJOR_VERSION" -ge 115 ]; then
          CHROMEDRIVER_URL=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/latest-versions-per-milestone-with-downloads.json" | \
            jq -r ".milestones.\"$CHROME_MAJOR_VERSION\".downloads.chromedriver[]? | select(.platform==\"linux64\") | .url" | head -1)
          
          if [ -z "$CHROMEDRIVER_URL" ]; then
            CHROMEDRIVER_URL=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" | \
              jq -r ".channels.Stable.downloads.chromedriver[]? | select(.platform==\"linux64\") | .url" | head -1)
          fi
        else
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_MAJOR_VERSION}")
          CHROMEDRIVER_URL="https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
        fi
        
        wget -O /tmp/chromedriver.zip "$CHROMEDRIVER_URL"
        unzip -q /tmp/chromedriver.zip -d /tmp
        sudo mv /tmp/chromedriver*/chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium beautifulsoup4 requests lxml
    
    - name: Run event scraper
      run: |
        echo "Starting event scraping..."
        python scraper.py
        
        # Verify the file was created
        if [ ! -f "lehavre_events_test.json" ]; then
          echo "ERROR: JSON file was not created by scraper.py"
          ls -la  # Debug: Show files in directory
          exit 1
        fi
        echo "File exists, continuing..."
      env:
        DISPLAY: :99
    
    - name: Validate JSON file
      run: |
        python -c "
        import json, sys
        try:
            with open('lehavre_events_test.json') as f:
                events = json.load(f)
            print(f'Found {len(events)} events')
            valid = sum(1 for e in events if e.get('title') and e.get('title') != 'Untitled Event')
            print(f'Valid events: {valid}/{len(events)}')
            if valid == 0:
                sys.exit(1)
        except Exception as e:
            print(f'Validation failed: {str(e)}')
            sys.exit(1)
        "
    
    - name: Configure Git
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git remote -v
        git branch -a
    
    - name: Check for changes
      id: check_changes
      run: |
        git status
        git diff --stat
        if [ -n "$(git status --porcelain lehavre_events_test.json)" ]; then
          echo "changes_detected=true" >> $GITHUB_OUTPUT
          echo "Changes detected in lehavre_events_test.json"
        else
          echo "changes_detected=false" >> $GITHUB_OUTPUT
          echo "No changes detected"
        fi
        
        - name: Verify branch
      run: |
        echo "Current branch: $(git branch --show-current)"
        if [ "$(git branch --show-current)" != "master" ]; then
          echo "ERROR: Not on master branch!"
          exit 1
        fi
    - name: Commit and push changes
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: |
        git add lehavre_events_test.json
        git status
        git commit -m "ðŸŽ­ Auto-update events - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        git pull --rebase origin main
        git push origin main
        echo "Push completed with exit code $?"
    
    - name: Verify push
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: |
        git fetch origin main
        if ! git diff --exit-code origin/main lehavre_events_test.json; then
          echo "ERROR: File was not updated on remote!"
          exit 1
        else
          echo "Successfully verified file update on remote"
        fi
    
    - name: Create summary
      run: |
        echo "## ðŸŽ­ Event Update Summary" >> $GITHUB_STEP_SUMMARY
        echo "**Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** $([ "${{ steps.check_changes.outputs.changes_detected }}" = "true" ] && echo "âœ… Updated" || echo "ðŸ”„ No changes")" >> $GITHUB_STEP_SUMMARY
        if [ -f "lehavre_events_test.json" ]; then
          echo "**Events Count:** $(python -c "import json; print(len(json.load(open('lehavre_events_test.json'))))")" >> $GITHUB_STEP_SUMMARY
        fi
